name: Build & Deploy Container (Staging / Production)

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_NAME: travel-agent
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  ACR_NAME: ${{ secrets.ACR_NAME }}

jobs:
  staging:
    if: github.event_name == 'pull_request'
    name: Build & Deploy (staging)
    runs-on: ubuntu-latest
    environment: staging
    env:
      APP_SERVICE_NAME: travel-mult-agent-staging
      IMAGE_TAG: ${{ github.sha }}-staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login
        run: az acr login --name $ACR_NAME

      - name: Build image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG -f Dockerfile .

      - name: Push image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG

      - name: Set container
        run: |
          az webapp config container set \
            -g $RESOURCE_GROUP -n $APP_SERVICE_NAME \
            --docker-custom-image-name $REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
            --docker-registry-server-url https://$REGISTRY

      - name: Sync app settings
        run: |
          az webapp config appsettings set -g $RESOURCE_GROUP -n $APP_SERVICE_NAME --settings \
            SERPAPI_API_KEY='${{ secrets.SERPAPI_API_KEY }}' \
            TRAVEL_AGENT_API_KEY='${{ secrets.TRAVEL_AGENT_API_KEY }}' \
            GRAPHRAG_API_KEY='${{ secrets.GRAPHRAG_API_KEY }}'

      - name: Health check
        run: |
          echo "Waiting 30s..."
          sleep 30
          for i in {1..15}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" https://$APP_SERVICE_NAME.azurewebsites.net/health || true)
            echo "Attempt $i => $code"
            [ "$code" = "200" ] && exit 0
            sleep 6
          done
          echo "Health check failed"; exit 1

  production:
    if: github.event_name == 'push'
    name: Build & Deploy (production)
    runs-on: ubuntu-latest
    environment: production
    env:
      APP_SERVICE_NAME: travel-mult-agent
      IMAGE_TAG: ${{ github.sha }}-prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login
        run: az acr login --name $ACR_NAME

      - name: Build image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG -f Dockerfile .

      - name: Push image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG

      - name: Set container
        run: |
          az webapp config container set \
            -g $RESOURCE_GROUP -n $APP_SERVICE_NAME \
            --docker-custom-image-name $REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
            --docker-registry-server-url https://$REGISTRY

      - name: Sync app settings
        run: |
          az webapp config appsettings set -g $RESOURCE_GROUP -n $APP_SERVICE_NAME --settings \
            SERPAPI_API_KEY='${{ secrets.SERPAPI_API_KEY }}' \
            TRAVEL_AGENT_API_KEY='${{ secrets.TRAVEL_AGENT_API_KEY }}' \
            GRAPHRAG_API_KEY='${{ secrets.GRAPHRAG_API_KEY }}'

      - name: Health check
        run: |
          echo "Waiting 30s..."
          sleep 30
          for i in {1..15}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" https://$APP_SERVICE_NAME.azurewebsites.net/health || true)
            echo "Attempt $i => $code"
            [ "$code" = "200" ] && exit 0
            sleep 6
          done
          echo "Health check failed"; exit 1
